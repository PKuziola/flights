stages:
  - test
  - create_zip
  - google_cloud_services

pytest:
  stage: test
  image: python:3.10
  before_script:
    - apt-get update
    - apt-get install default-jdk -y
  script:
    - pip install pytest pytest-cov pandas pyspark
    - python -m pytest --cov-report=html --cov=app .
  artifacts:
    paths:
      - test_history
    expire_in: 100 days
  rules:
    - if: $CI_COMMIT_BRANCH == "development"

zip_files:
  stage: create_zip
  image: alpine
  before_script:
    - apk add --update zip
  script:
    - cd app && zip -r ../jobs.zip jobs
  artifacts:
    paths:
      - jobs.zip
  dependencies:
    - pytest
  rules:
    - if: $CI_COMMIT_BRANCH == "development"


google_cloud_services:
  stage: google_cloud_services
  image: google/cloud-sdk
  script:
    - echo $GCP_ACCOUNT_KEY > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - rm gcloud-service-key.json
    - gcloud config set project flights-429420
    - if ! gsutil ls -b gs://flights-cicd-bucket/; then gsutil mb -l EU gs://flights-cicd-bucket/; fi
    - gsutil cp jobs.zip gs://flights-cicd-bucket/jobs.zip
    - gsutil cp app/main.py gs://flights-cicd-bucket/main.py
    - gcloud storage objects update gs://flights-cicd-bucket/main.py --content-type=application/octet-stream
    - gcloud dataproc batches submit pyspark gs://flights-cicd-bucket/main.py    
      --project=flights-429420 
      --region=us-central1 
      --batch=flights-batch-final 
      --version=2.2 
      --py-files=gs://flights-cicd-bucket/jobs.zip 
      --service-account=flights-service-acc-new@flights-429420.iam.gserviceaccount.com   
      --subnet my-new-subnet    
  
  dependencies:
    - zip_files
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
